#
# Debug this workflow locally with act:
# https://github.com/StudioLE/act-dotnet
#
name: CI/CD

on:
  push:
  pull_request:
    branches:
      - develop

jobs:

####################################################################################################

  analysis:
    name: Analysis
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.metadata.outputs.version }}
      configuration: ${{ steps.metadata.outputs.configuration }}
    steps:

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release@v19.0.5 ${{ env.DRY_RUN }}

      - name: Set Metadata
        id: metadata
        run: |
          echo "configuration=Release" >> $GITHUB_OUTPUT
          echo "version=$(git describe --tags --abbrev=0 | cut -c 2-)" >> $GITHUB_OUTPUT

      - name: Read Metadata
        run: |
          echo "Configuration: ${{ steps.metadata.outputs.configuration }}"
          echo "Version: ${{ steps.metadata.outputs.version }}"

####################################################################################################

  build-and-test:
    name: Build and Test
    needs: analysis
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:

      - name: Read Metadata
        run: |
          echo "Configuration: ${{ needs.analysis.outputs.configuration }}"
          echo "Version: ${{ needs.analysis.outputs.version }}"

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Load Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Add GitHub Packages as a NuGet source
        run: >
          dotnet nuget add source
          --username StudioLE
          --password ${{ secrets.GITHUB_TOKEN }}
          --store-password-in-clear-text
          --name github "https://nuget.pkg.github.com/StudioLE/index.json"

      - name: Restore NuGet Dependencies
        run: >
          dotnet restore
          --nologo
          --verbosity minimal

      - name: Build Solution
        run: >
          dotnet build
          --configuration "${{ needs.analysis.outputs.configuration }}"
          -p:Version="${{ needs.analysis.outputs.version }}"
          -p:ContinuousIntegrationBuild=true
          -p:PublishRepositoryUrl=true
          -p:EmbedUntrackedSources=true
          -p:IncludeSymbols=true
          -p:SymbolPackageFormat=snupkg
          --nologo
          --no-restore
          --verbosity minimal

      - name: Test Solution
        run: >
          dotnet test
          --configuration "${{ needs.analysis.outputs.configuration }}"
          --nologo
          --no-build
          --verbosity quiet
          --logger trx
          --results-directory "Tests-${{ runner.os }}-${{ runner.arch }}"

      - name: Upload Test Artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Tests-${{ runner.os }}-${{ runner.arch }}
          path: Tests-${{ runner.os }}-${{ runner.arch }}

      - name: Pack Solution
        run: >
          dotnet pack
          --configuration "${{ needs.analysis.outputs.configuration }}"
          -p:Version="${{ needs.analysis.outputs.version }}"
          -p:ContinuousIntegrationBuild=true
          -p:PublishRepositoryUrl=true
          -p:EmbedUntrackedSources=true
          -p:IncludeSymbols=true
          -p:SymbolPackageFormat=snupkg
          --no-build
          --output artifacts

      - name: Upload NuGet Artifact
        uses: actions/upload-artifact@v3
        with:
          name: NuGet-${{runner.os}}-v${{ needs.analysis.outputs.version }}
          path: artifacts
        if: ${{ always() }}

####################################################################################################

  publish-nuget:
    name: Publish NuGet
    if: ${{ github.repository == 'StudioLE/Verify' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') }}
    needs:
      - analysis
      - build-and-test
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:

      - name: Read Metadata
        run: |
          echo "Configuration: ${{ needs.analysis.outputs.configuration }}"
          echo "Version: ${{ needs.analysis.outputs.version }}"

      - name: Download NuGet Artifact
        uses: actions/download-artifact@v3
        with:
          name: NuGet-${{runner.os}}-v${{ needs.analysis.outputs.version }}
          path: artifacts

      - name: Read Directory
        run: |
          ls -1 artifacts

      - name: Push To GitHub Packages
        run: >
          dotnet nuget push "artifacts/*"
          --skip-duplicate
          --source "https://nuget.pkg.github.com/StudioLE/index.json"
          --symbol-source "https://nuget.pkg.github.com/StudioLE/index.json"
          --api-key "${{ secrets.GITHUB_TOKEN }}"
